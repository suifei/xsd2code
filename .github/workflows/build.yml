name: Build and Release

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.22
    
    - name: Run tests
      run: go test -v ./...
    
    - name: Run integration tests
      run: |
        go build -o xsd2code ./cmd
        ./xsd2code -xsd=examples/simple_example.xsd -output=test_example.go -package=test -json
        ./xsd2code -xsd=test/TC6_XML_V10_B.xsd -output=test_plcopen.go -package=plcopen -json -validation -tests

  build:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.22
    
    - name: Build for multiple platforms
      run: |
        mkdir -p dist
        
        # Windows
        GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o dist/xsd2code-windows-amd64.exe ./cmd
        GOOS=windows GOARCH=386 go build -ldflags="-s -w" -o dist/xsd2code-windows-386.exe ./cmd
        
        # Linux
        GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o dist/xsd2code-linux-amd64 ./cmd
        GOOS=linux GOARCH=386 go build -ldflags="-s -w" -o dist/xsd2code-linux-386 ./cmd
        GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o dist/xsd2code-linux-arm64 ./cmd
        
        # macOS
        GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o dist/xsd2code-darwin-amd64 ./cmd
        GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o dist/xsd2code-darwin-arm64 ./cmd
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
