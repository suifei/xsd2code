name: Build and Release

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

# 明确定义权限
permissions:
  contents: write  # 这允许推送到存储库，包括创建releases
  pull-requests: write  # 如果需要评论PR等
  
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.22
    
    - name: Run tests
      run: go test -v ./...
    
    - name: Run integration test
      run: |
        go build -o xsd2code ./cmd
        ./xsd2code -xsd=examples/simple_example.xsd -output=test_example.go -package=test -json
  release:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.22
    
    - name: Build for multiple platforms
      run: |
        mkdir -p dist
        
        # Windows
        GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o dist/xsd2code-windows-amd64.exe ./cmd
        GOOS=windows GOARCH=386 go build -ldflags="-s -w" -o dist/xsd2code-windows-386.exe ./cmd
        
        # Linux
        GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o dist/xsd2code-linux-amd64 ./cmd
        GOOS=linux GOARCH=386 go build -ldflags="-s -w" -o dist/xsd2code-linux-386 ./cmd
        GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o dist/xsd2code-linux-arm64 ./cmd
        
        # macOS
        GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o dist/xsd2code-darwin-amd64 ./cmd
        GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o dist/xsd2code-darwin-arm64 ./cmd
        
        # Add version info to binary names
        VERSION=${GITHUB_REF#refs/tags/}
        echo "Building version: $VERSION"
        
        # Create checksum files
        cd dist
        sha256sum * > SHA256SUMS.txt
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
